{"version":3,"file":"../css/editor.css","mappings":";;;AAAA;;;CAAA;AAKA;;;EAGC;ACAD;;ADKA;;EAEC;ACFD;;ADIA;EACC;ACDD;;ADGA;;;;;EAKC;EACA;EACA;ACAD;;ADEA;;;;EAIC;ACCD;;ADCA;;;;;;;EAOC;ACED;;AC5CA;EACC;AD+CD;;AC5CA;;EAEC;AD+CD;;AE8FC;EAbA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AF7ED;;AG3DA;EDgIC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AFjED;;AI3EA;EACC;KAAA;UAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AJ8ED;;AK1FA;EAEC;EACA;AL4FD;AK3FC;EAEC;AL4FF;AM5DE;ED7BD;IAEE;EL2FD;EK1FC;IACC;EL4FF;AACF;;AO5GA;EACC;EACA;AP+GD;;AMzEE;EEpCA;IACC;ERiHD;AACF,C","sources":["webpack://example-ghost-org/./src/scss/base/reset.scss","webpack://example-ghost-org/./src/scss/editor.scss","webpack://example-ghost-org/./src/scss/base/typography.scss","webpack://example-ghost-org/./src/scss/utils/mixins.scss","webpack://example-ghost-org/./src/scss/base/visually-hidden.scss","webpack://example-ghost-org/./src/scss/base/forms.scss","webpack://example-ghost-org/./src/scss/blocks/core/group.scss","webpack://example-ghost-org/./src/scss/utils/breakpoint-mixin.scss","webpack://example-ghost-org/./src/scss/blocks/core/quote.scss","webpack://example-ghost-org/./src/scss/blocks/core/columns.scss"],"sourcesContent":["/*\nJosh's Custom CSS Reset\nhttps://www.joshwcomeau.com/css/custom-css-reset/\n*/\n\n*,\n*::before,\n*::after {\n\tbox-sizing: border-box;\n}\n// * {\n// \tmargin: 0;\n// }\nhtml,\nbody {\n\theight: 100%;\n}\nbody {\n\t-webkit-font-smoothing: antialiased;\n}\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n\tdisplay: block;\n\tmax-width: 100%;\n\theight: auto;\n}\ninput,\nbutton,\ntextarea,\nselect {\n\tfont: inherit;\n}\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\toverflow-wrap: break-word;\n}\n","/*\nJosh's Custom CSS Reset\nhttps://www.joshwcomeau.com/css/custom-css-reset/\n*/\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\nbody {\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n  height: auto;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\nsmall {\n  font-size: var(--wp--preset--font-size--small);\n}\n\nul,\nol {\n  padding: 0 0 0 var(--wp--preset--spacing--50);\n}\n\n.visually-hidden:not(:focus):not(:active):not(:focus):not(:active) {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: auto;\n  margin: 0;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  white-space: nowrap;\n}\n\n.always-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: auto;\n  margin: 0;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  white-space: nowrap;\n}\n\ninput[type=submit] {\n  appearance: none;\n  background-color: var(--wp--preset--color--primary);\n  border-radius: 0px;\n  border-color: var(--wp--preset--color--background);\n  border-style: solid;\n  border-width: 2px;\n  color: var(--wp--preset--color--background);\n  padding-top: var(--wp--preset--spacing--20);\n  padding-right: var(--wp--preset--spacing--50);\n  padding-bottom: var(--wp--preset--spacing--20);\n  padding-left: var(--wp--preset--spacing--50);\n  text-decoration: none;\n}\n\n.wp-block-group {\n  padding-bottom: 0;\n  padding-top: 0;\n}\n.wp-block-group.is-selected, .wp-block-group.has-child-selected {\n  padding-bottom: 1.25em;\n}\n@media (max-width: 768px) {\n  .wp-block-group.wp-block-group-is-layout-grid {\n    grid-template-columns: 1fr;\n  }\n  .wp-block-group.wp-block-group-is-layout-grid > :is(*, div) {\n    grid-column: 1/-1;\n  }\n}\n\n.wp-block-quote {\n  border-left: 2px solid var(--wp--preset--color--primary);\n  padding-left: var(--wp--preset--spacing--50);\n}\n\n@media (max-width: 768px) {\n  .wp-block-columns.is-style-reverse-on-mobile {\n    flex-direction: column-reverse;\n  }\n}","small {\n\tfont-size: var(--wp--preset--font-size--small);\n}\n\nul,\nol {\n\tpadding: 0 0 0 var(--wp--preset--spacing--50);\n}\n","/// Size an element\n@mixin size($width, $height: $width) {\n\twidth: $width;\n\theight: $height;\n}\n\n/// Add left/right padding to an element\n@mixin padding-x($left: var(--wp--style--root--padding-left), $right: var(--wp--style--root--padding-right)) {\n\tpadding-left: $left;\n\tpadding-right: $right;\n}\n\n/// Add top/bottom padding to an element\n@mixin padding-y($top: var(--wp--style--root--padding-top), $bottom: var(--wp--style--root--padding-bottom)) {\n\tpadding-top: $top;\n\tpadding-bottom: $bottom;\n}\n\n/// Add padding to an element\n@mixin padding(\n\t$top: var(--wp--style--root--padding-top),\n\t$right: var(--wp--style--root--padding-right),\n\t$bottom: var(--wp--style--root--padding-bottom),\n\t$left: var(--wp--style--root--padding-left)\n) {\n\t@include padding-y($top, $bottom);\n\t@include padding-x($left, $right);\n}\n\n/// Add left/right margin to an element\n@mixin margin-x($right, $left: $right) {\n\tmargin-left: $left;\n\tmargin-right: $right;\n}\n\n/// Add top/bottom padding to an element\n@mixin margin-y($top, $bottom: $top) {\n\tpadding-top: $top;\n\tpadding-bottom: $bottom;\n}\n\n/// Add margin to an element\n@mixin margin($top, $right: $top, $bottom: $top, $left: $right) {\n\t@include margin-y($top, $bottom);\n\t@include margin-x($left, $right);\n}\n\n/// Simple fade-in animation\n/// @param {String} $type - \"show\" or \"hide\", defaults to \"show\"\n/// @param {Number} $delay - Animation delay in seconds\n/// @param {Number} $duration - Animation duration in seconds\n/// @param {String} $timing-function - Animation timing function, defaults to \"ease-in\"\n@mixin fade($type: \"show\", $delay: 0s, $duration: 0.5s, $timing-function: ease-in) {\n\t@if $type == \"hide\" {\n\t\tanimation: $duration hideAnimation $timing-function;\n\t\tanimation-delay: $delay;\n\t\tanimation-fill-mode: forwards;\n\t\t@keyframes hideAnimation {\n\t\t\tto {\n\t\t\t\tvisibility: hidden;\n\t\t\t\topacity: 0;\n\t\t\t}\n\t\t}\n\t} @else if $type == \"show\" {\n\t\tanimation: $duration fadeInAnimation $timing-function;\n\t\tanimation-delay: $delay;\n\t\tanimation-iteration-count: 1;\n\t\t@keyframes fadeInAnimation {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// Flow mixin\n@mixin flow($gap: var(--wp--style--block-gap)) {\n\t& > * + * {\n\t\tmargin-top: $gap;\n\t}\n}\n\n/// Container mixins\n@mixin container($type: \"default\") {\n\t@if $type == \"default\" {\n\t\tmax-width: var(--wp--style--global--content-size);\n\t\t@include margin-x(auto);\n\t} @else if $type == \"wide\" {\n\t\tmax-width: var(--wp--style--global--wide-size);\n\t\t@include margin-x(auto);\n\t} @else if $type == \"full\" {\n\t\tmax-width: 100%;\n\t\t@include margin-x(auto);\n\t}\n}\n\n/// Blocks alignment mixin\n@mixin blocks-alignment() {\n\tpadding-right: var(--wp--style--root--padding-right);\n\tpadding-left: var(--wp--style--root--padding-left);\n\t& > *,\n\t.is-layout-flow > * {\n\t\t@include margin-x(auto);\n\t\tmax-width: var(--wp--style--global--content-size);\n\t\t&:where(.alignfull) {\n\t\t\tmargin-right: calc(var(--wp--style--root--padding-right) * -1);\n\t\t\tmargin-left: calc(var(--wp--style--root--padding-left) * -1);\n\t\t\tmax-width: calc(100% + var(--wp--style--root--padding-right) + var(--wp--style--root--padding-left));\n\t\t}\n\t\t&:where(.alignwide) {\n\t\t\tmax-width: var(--wp--style--global--wide-size);\n\t\t}\n\t\t&:where(.alignleft) {\n\t\t\tmargin-left: 0;\n\t\t\tfloat: left;\n\t\t\tmargin-right: var(--wp--style--block-gap);\n\t\t}\n\t\t&:where(.alignright) {\n\t\t\tmargin-right: 0;\n\t\t\tfloat: right;\n\t\t\tmargin-left: var(--wp--style--block-gap);\n\t\t}\n\t}\n\t.is-layout-flow > * {\n\t\tpadding-right: var(--wp--style--root--padding-right);\n\t\tpadding-left: var(--wp--style--root--padding-left);\n\t}\n}\n\n/// Always visually hidden, but accessible to screen readers\n@mixin always-visually-hidden() {\n\tborder: 0;\n\tclip: rect(0 0 0 0);\n\theight: auto;\n\tmargin: 0;\n\toverflow: hidden;\n\tpadding: 0;\n\tposition: absolute;\n\twidth: 1px;\n\twhite-space: nowrap;\n}\n\n/// Visually hidden, accessible to screen readers, but visible on focus\n@mixin visually-hidden() {\n\t&:not(:focus):not(:active) {\n\t\t@include always-visually-hidden();\n\t}\n}\n","@use \"../utils\";\n\n.visually-hidden:not(:focus):not(:active) {\n\t@include utils.visually-hidden();\n}\n\n.always-visually-hidden {\n\t@include utils.always-visually-hidden();\n}\n","// This is an example of how you can style forms using CSS variables from theme.json.\n\ninput[type=\"submit\"] {\n\tappearance: none;\n\tbackground-color: var(--wp--preset--color--primary);\n\tborder-radius: 0px;\n\tborder-color: var(--wp--preset--color--background);\n\tborder-style: solid;\n\tborder-width: 2px;\n\tcolor: var(--wp--preset--color--background);\n\tpadding-top: var(--wp--preset--spacing--20);\n\tpadding-right: var(--wp--preset--spacing--50);\n\tpadding-bottom: var(--wp--preset--spacing--20);\n\tpadding-left: var(--wp--preset--spacing--50);\n\ttext-decoration: none;\n}\n","@use \"../../utils\";\n\n.wp-block-group {\n\t// padding added for parity with the block editor\n\tpadding-bottom: 0;\n\tpadding-top: 0;\n\t&.is-selected,\n\t&.has-child-selected {\n\t\tpadding-bottom: 1.25em;\n\t}\n\n\t&.wp-block-group-is-layout-grid {\n\t\t@include utils.breakpoint-down(\"md\") {\n\t\t\tgrid-template-columns: 1fr;\n\t\t\t> :is(*, div) {\n\t\t\t\tgrid-column: 1 / -1;\n\t\t\t}\n\t\t}\n\t}\n}\n","/// This map is used for a mobile first responsive coding\n/// approach mixin in `breakpoint`.\n/// The map uses simple t-shirt sizing to define the breakpoints.\n@use \"breakpoints\" as *;\n\n/// This mixin assumes mobile-first coding, and helps you respond to\n/// different breakpoints from within each applicable selector.\n/// It pulls breakpoints from a map of breakpoints set in `theme.json`.\n/// Read More : https://sass-guidelin.es/#responsive-web-design-and-breakpoints\n@mixin breakpoint($breakpoint) {\n\t// Retrieves the value of the breakpoint\n\t$raw-query: map-get($breakpoints, $breakpoint);\n\n\t// If the breakpoint exists in the map\n\t@if $raw-query {\n\t\t$query: if(type-of($raw-query) == \"string\", unquote($raw-query), inspect($raw-query));\n\n\t\t// Prints a media query based on the value\n\t\t@media (min-width: #{$query} ) {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@error \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n\t\t + \"Please make sure it is defined in `$breakpoints` map.\";\n\t}\n}\n\n/// This mixin assumes mobile-first coding, and helps you respond to\n/// different breakpoints from within each applicable selector.\n/// It pulls breakpoints from a map of breakpoints set in `theme.json`.\n/// Read More : https://sass-guidelin.es/#responsive-web-design-and-breakpoints\n@mixin breakpoint-down($breakpoint) {\n\t// Retrieves the value of the breakpoint\n\t$raw-query: map-get($breakpoints, $breakpoint);\n\n\t// If the breakpoint exists in the map\n\t@if $raw-query {\n\t\t$query: if(type-of($raw-query) == \"string\", unquote($raw-query), inspect($raw-query));\n\n\t\t// Prints a media query based on the value\n\t\t@media (max-width: #{$query} ) {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@error \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n\t\t + \"Please make sure it is defined in `$breakpoints` map.\";\n\t}\n}\n",".wp-block-quote {\n\tborder-left: 2px solid var(--wp--preset--color--primary);\n\tpadding-left: var(--wp--preset--spacing--50);\n}\n","@use \"../../utils\";\n\n@include utils.breakpoint-down(\"md\") {\n\t.wp-block-columns {\n\t\t&.is-style-reverse-on-mobile {\n\t\t\tflex-direction: column-reverse;\n\t\t}\n\t}\n}\n"],"names":[],"sourceRoot":""}